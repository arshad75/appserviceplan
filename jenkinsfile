```yaml
name: Node.js CI Pipeline

# Trigger the workflow on push events to the main branch
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: npm ci
      - run: npm run build

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: npm ci
      - run: npm test

  secret-scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Scan secrets
        uses: aws-actions/aws-secrets-manager-audit-engine@v1.0.0
        with:
          awsRegion: us-east-1 # Set this to your desired region
          awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }} # Use the AWS Access Key ID from your AWS account
          awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Use the AWS Secret Access Key from your AWS account
          # Customize the command to match your needs
          command: scan --project ci-scan --application-id myapp

  deploy:
    needs: [build, test, secret-scan]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/aws-ecr-deploy@v1
        with:
          aws-region: us-east-1 # Set this to your desired region
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          repository: myrepo # Set this to your ECR repository name
          image-tag: latest # Set this to your desired image tag
          force: true # Set this to true to force push even if the image already exists
          wait-until-deployed: true # Set this to true to wait until the deployment is complete
```